How to create 1st pod in kubernetes

orphan pod   # An orphan pod in Kubernetes refers to a pod that is not managed by any higher-level controller (like a Deployment, StatefulSet, or ReplicaSet), or whose managing controller is no longer available.

step 1 - kubectl create ns rbl  # create  namespace /project

## Imerative Mode ##   You tell Kubernetes what to do directly using kubectl commands.
Example:
kubectl run pod1 --image=docker.in/nginx -n rbl    # this is to create pod/container

kubectl run my-pod \
  --image=nginx \
  --restart=Never \
  --port=80

kubectl get pod -n rbl -o wide

## Declarative Mode ##  You define the desired state in a YAML or JSON manifest file and apply it using kubectl apply


controler pod    # A pod that is created and managed by a Kubernetes controller such as:

Deployment
ReplicaSet
StatefulSet
DaemonSet
Job / CronJob

Lifecycle:
The controller ensures the pod always meets the desired state.
If the pod crashes or is deleted, the controller automatically recreates it.
The controller tracks the pod using ownerReferences in the pod’s metadata.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Note: There is no way to make ReplicationController (RC) via command line, only way to make it declarative way..

ReplicationController (RC):  RC is one of the original workload controllers whose main job is to ensure that a specified number of identical pods are always running. 
Although it’s now mostly replaced by ReplicaSet (and ReplicaSets are usually managed by Deployments), RC is still supported for backward compatibility.

What is a ReplicationController? A ReplicationController is a Kubernetes object that:

Watches over a set of Pods.
Makes sure the actual number of Pods matches the desired number you specify.
Creates or deletes Pods to maintain that number.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

