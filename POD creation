How to create 1st pod in kubernetes

orphan pod   # An orphan pod in Kubernetes refers to a pod that is not managed by any higher-level controller (like a Deployment, StatefulSet, or ReplicaSet), or whose managing controller is no longer available.

step 1 - kubectl create ns rbl  # create  namespace /project

## Imerative Mode ##   You tell Kubernetes what to do directly using kubectl commands.
Example:
kubectl run pod1 --image=docker.in/nginx -n rbl    # this is to create pod/container

kubectl run my-pod \
  --image=nginx \
  --restart=Never \
  --port=80

kubectl get pod -n rbl -o wide
kubectl exec -it <pod-name> -- bash
kubectl logs <pod-name>
kubectl describe pod web1

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

## Declarative Mode ##  You define the desired state in a YAML or JSON manifest file and apply it using kubectl apply


controler pod    # A pod that is created and managed by a Kubernetes controller such as:

Deployment
ReplicaSet
StatefulSet
DaemonSet
Job / CronJob

Lifecycle:
The controller ensures the pod always meets the desired state.
If the pod crashes or is deleted, the controller automatically recreates it.
The controller tracks the pod using ownerReferences in the podâ€™s metadata.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Note: There is no way to make ReplicationController (RC) via command line, only way to make it declarative way..

ReplicationController (RC):  RC is one of the original workload controllers whose main job is to ensure that a specified number of identical pods are always running. 
Although itâ€™s now mostly replaced by ReplicaSet (and ReplicaSets are usually managed by Deployments), RC is still supported for backward compatibility.

What is a ReplicationController? A ReplicationController is a Kubernetes object that:

Watches over a set of Pods.
Makes sure the actual number of Pods matches the desired number you specify.
Creates or deletes Pods to maintain that number.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Labels   ?  
Add/Remove/Change --- Lable

Then We can List/Delete the pod based on lable

1.  It is an extra  information  which placed  in the key: value  .
2.  Based on label we can filter the pod  .

  list/delete/load/resource/network/monitoring 


List
Delete

Add 
Remove
Change 


	1. Command 
	2. Manifests
Lab-1:  how to put  on orphan  pod by command line 

Tier: backend
Type: db
Zone: numbai
Region: india
Version: "2.0"



Pod statuses in Kubernetes

1. Running					: The Pod has been scheduled on a node, and all containers are running without issues.
2. Pending					: The Pod has been accepted by the cluster but is waiting to be scheduled or waiting for images/resources.
3.	Error					: A generic error occurred in the Pod or its containers. Usually means a failure during execution.
4.	ContainerCreating		: The Pod is being initialized: image pulling, volume mounting, or networking setup is happening.
5. CrashLoopBackOff			: The container started but keeps crashing repeatedly. Kubernetes retries with backoff (increasing delay).
6. OOM (Out of Memory)		: The container exceeded its memory limit, and the kernel killed it.
7. Terminating				: The Pod is shutting down after receiving a delete command. Kubernetes is cleaning up resources.
8. Completed 				: The Pod finished execution successfully (typical for batch jobs).
9: ImagePullError / ImagePullBackOff :	Kubernetes cannot pull the container image. Reasons may include wrong image name, tag, registry auth issues, or network errors.

ðŸ‘‰ In short:
Healthy states: Running, Completed.
Transient states: Pending, ContainerCreating, Terminating.
Error/problem states: Error, CrashLoopBackOff, OOM, ImagePullError.


































