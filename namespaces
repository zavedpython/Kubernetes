kubectl config get-contexts        # to check username which have logged-in

In Kubernetes (K8s), namespaces are a way to divide cluster resources between multiple users, teams, or applications. They provide logical isolation within the same cluster. Think of namespaces as "virtual clusters" inside a single physical cluster.

Hereâ€™s a detailed breakdown:

1. Purpose of Namespaces
    Resource isolation: Multiple teams can work in the same cluster without interfering with each other.
    Access control: You can apply Role-Based Access Control (RBAC) to namespaces.
    Resource quotas: Limit resources (CPU, memory, etc.) for a particular namespace.
    Organization: Easier management of resources by grouping related objects.

2. Types of Namespaces

Default namespaces provided by Kubernetes:

Namespace	                    Purpose
default	                      Default namespace for resources without a namespace
kube-system	                  Resources created by Kubernetes system itself
kube-public	                  Public namespace readable by all users
kube-node-lease	              Holds lease objects for node heartbeat tracking

Custom namespaces:     You can create your own, e.g., dev, staging, prod.

namespace commands:

List:	kubectl get ns 
Create:	kubectl create ns <namespace name>
Use:	kubectl get pod -n <namespace name>
Delete:	kubectl delete ns <namespace name>
