kubectl create deploy krnetwork --image=nginx:1.16 --replicas=5
kubectl get deployment
kubectl scale --replicas=3 deploy krnetwork
kubectl delete deploy krnetwork
kubectl edit deploy <web-deploy>
kubectl set image deploy web-deploy nginx=nginx:1.18    # To change image version runtime
kubectl rollout history deploy <web-deploy>

kubectl rollout history deploy <web-deploy> --revision=2    # To see the revision history
kubectl rollout history deploy <web-deploy> --to-revision=2  # To rollback on a specific version

kubectl rollout undo deploy <web-deploy>      # to rolback on previous version


------------------------------------------

Deployment Startegy ---In Kubernetes, a deployment strategy determines how new versions of your application are rolled out to pods when you update a Deployment (or StatefulSet).

1.  RollingUpdate (Default)
2.  Recreate


2. RollingUpdate (Default)

What Happens: Kubernetes gradually replaces old pods with new ones
Uses maxUnavailable and maxSurge to control rollout speed
Use Case:
Recommended for most production workloads
When zero-downtime or near-zero downtime is required

Pros:
✅ Smooth transition
✅ No downtime if replicas > 1

Cons:
❌ Rollback might be slower
❌ Some pods may run different versions temporarily (requires backward compatibility)

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

